/*–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –±–ª–æ–∫—É –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
–ó–∞–¥–∞–Ω–∏–µ 2.
–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—é. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—à–∏—Ö –∑–Ω–∞–Ω–∏–π, –Ω–æ –∏ —à–∞–Ω—Å –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏! üòä
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
–í–∞—à —Ñ–∞–π–ª `input.txt` —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏. –≠—Ç–æ —Å–ª–æ–≤–∞-—Ñ—Ä—É–∫—Ç—ã, –æ–≤–æ—â–∏ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã.
–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ —ç—Ç–æ –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–∏–∫–Ω–∏–∫! üçéü•ïü•ß
–ó–∞–¥–∞–Ω–∏—è:
        1. –û—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–¥—Å—á–µ—Ç —Å–ª–æ–≤:
        –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ñ–∞–π–ª–µ `input.txt`.
        2. –ù–∞–π—Ç–∏ —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ:
        –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Ñ–∞–π–ª–µ.
        3. –í—ã—á–∏—Å–ª–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É —Å–ª–æ–≤:
        –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ —Ñ–∞–π–ª–µ. –ü–æ–¥—É–º–∞–π—Ç–µ –æ–± —ç—Ç–æ–º –∫–∞–∫ –æ –ø–æ–¥—Å—á–µ—Ç–µ —Ç–æ–≥–æ,
–∫–∞–∫–∏–µ —Ñ—Ä—É–∫—Ç—ã –∏ –æ–≤–æ—â–∏ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞ –≤–∞—à–µ–º –ø–∏–∫–Ω–∏–∫–µ! üçáüçâ
        üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á. –ù–∞–ø—Ä–∏–º–µ—Ä, `HashMap` –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã–º
        –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —á–∞—Å—Ç–æ—Ç—ã —Å–ª–æ–≤. –≠—Ç–æ –∫–∞–∫ –∏–º–µ—Ç—å –∫–æ—Ä–∑–∏–Ω–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ —Ñ—Ä—É–∫—Ç–æ–≤ –Ω–∞ –ø–∏–∫–Ω–∏–∫–µ! üß∫
–£–¥–∞—á–∏, –∏ –ø–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ - —ç—Ç–æ —à–∞–≥ –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é –º–∏—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è! –í—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å! üí™Û∞†ÅÛ∞ûµ*/

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
        // –°—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –≤ —Å—Ç—Ä–æ–∫—É
        String stroka = new String();
        File myFile = new File("input.txt");
        FileInputStream inputStream = null;
        try {
            inputStream = new FileInputStream(myFile);
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }
        byte[] buffer = new byte[1024];
        int bytesRead;
        while ((bytesRead = inputStream.read(buffer)) != -1) {
            stroka = new String(buffer, 0, bytesRead);
            System.out.println("–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: " + stroka);
            System.out.println();
        }
        inputStream.close();

        //–°–ø–ª–∏—Ç—É–µ–º –ø–æ –ø—Ä–æ–±–µ–ª—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å—ë –≤ —Å–ø–∏—Å–æ–∫
        String[] text = new String[]{};
        text = stroka.split("\\s+");

        // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ñ–∞–π–ª–µ
        //System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ñ–∞–π–ª–µ = " + text.length);

        //–ù–∞—Ö–æ–¥–∏–º —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
        Map<String,Integer> dlina = new HashMap<>();
        for (String i : text){
            dlina.putIfAbsent(i, i.length());
        }
        ArrayList<Integer> valueList = new ArrayList<>(dlina.values());
        Integer maxdlina = Collections.max(valueList);
        String maxslovo = null;
        for (String i : text){
            if (i.length() == maxdlina) maxslovo = i; 
        }
        //System.out.println("–°–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Ñ–∞–π–ª–µ —ç—Ç–æ - " + maxslovo );

        //–í—ã—á–∏—Å–ª—è–µ–º —á–∞—Å—Ç–æ—Ç—É —Å–ª–æ–≤
        Map<String,Integer> chastota = new HashMap<>();
        for (String i : text){
            if (chastota.containsKey(i)){
                    chastota.put(i, chastota.get(i) + 1);
                }
            else {
                chastota.put(i,1);
            }
        }
        ArrayList<Integer> valueList2 = new ArrayList<>(chastota.values());
        Integer indexchastoeslovo = Collections.max(valueList2);
        String chastoeslovo = null;
        for (var item:chastota.entrySet()){
            if (item.getValue() == indexchastoeslovo) chastoeslovo = item.getKey();
        }
        //System.out.println("–°–∞–º–æ–µ —á–∞—Å—Ç–æ–µ —Å–ª–æ–≤–æ –≤ —Ñ–∞–π–ª–µ —ç—Ç–æ - " + chastoeslovo );

        //–£–∫—Ä–∞—Å–∏–º –æ—Ç–≤–µ—Ç:
        System.out.println("–ù–∞ –ø–∏–∫–Ω–∏–∫ —Å–µ–≥–æ–¥–Ω—è —É –Ω–∞—Å —Å —Å–æ–±–æ–π –≤—Å–µ–≥–æ: " + text.length + " –ø—Ä–æ–¥—É–∫—Ç–æ–≤. \n" +
                "–°–ª–æ–∂–Ω–µ–µ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å –∏–∑ —Ç–æ–≥–æ —á—Ç–æ –º—ã –≤–∑—è–ª–∏ —Å —Å–æ–±–æ–π —ç—Ç–æ - " + maxslovo + ". \n" +
                "–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —É –º–µ–Ω—è –Ω–∞ –ø–∏–∫–Ω–∏–∫–µ —ç—Ç–æ - " + chastoeslovo+ ". \n" +
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ)\n");




    }
}
